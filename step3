/*
Step3：echo と print の違い
*/

/*
①目的
PHPで画面に文字を出力する際に使う echo と print の違いを理解する。
両方を実際に使って出力し、結果を比較する。
*/

/*
②手順
C:\php-basics-learning に step3_output.php を作成
次のコードを書いてください：
*/

/*
Dockerコンテナ（laravel_app）内で実行します：
docker exec -it laravel_app php /var/www/html/step3_output.php

③チェックリスト
echo の出力結果が表示されたか
print の出力結果が表示されたか
echo で複数の文字列をカンマで区切って渡せることを確認したか
print が「1つの値しか受け取れない」ことを確認したか

④次の一手
違いを整理：
echo → 複数の引数OK、戻り値なし（処理が速い）
print → 引数は1つだけ、戻り値あり（常に1を返す）

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

とても良い気づきです 👏
Javaでの void と、PHPの echo / print の違いをつなげて考えているのは素晴らしいです。

Javaの void と戻り値
void は「戻り値がない」メソッドの宣言方法です。
例：
public static void sayHello() {
    System.out.println("Hello!");
}
→ 呼び出しても何も返さず、ただ処理を実行する。

PHPの echo と print

echo
戻り値を持たない（Javaの void 的なイメージ）
出力するだけ、しかも複数の引数を同時に出せる。

print
戻り値を持つ（必ず 1 を返す）
ただし「1つの値」しか扱えない。
なので、Javaでいうと「常に整数の 1 を返すメソッド」のような感覚。

驚くポイント
「戻り値ありなのに、入力（引数）が1つしか受け取れない」

ここはPHPの言語仕様的な“クセ”です。
**printは本来「関数」ではなく「言語構造」**として設計されているため、あくまで「1つの式を評価して出力する」機能にとどまっているのです。
そのため print("A", "B"); のような書き方はエラーになります。
一方で、echo は「柔軟に複数の引数を出力する」ように設計されています。

✅ まとめると：
Javaの void ＝「戻り値なし」メソッド
PHPの echo ＝「戻り値なし（void的）」、複数出力可能
PHPの print ＝「戻り値あり（1を返す）」、ただし引数は1つだけ
*/