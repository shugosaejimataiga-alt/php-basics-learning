了解しました！
それでは ステップ13：if / else / elseif を進めましょう。

📘 Step13：if / else / elseif
① 基本の書き方（例文コード）
<?php
$score = 75;

if ($score >= 80) {
    echo "合格！おめでとう！";
} elseif ($score >= 60) {
    echo "惜しい！あと少しで合格！";
} else {
    echo "不合格です。次はがんばりましょう。";
}
?>


🔹 解説
if：最初の条件を判定します。
elseif：ifが偽だった場合、次の条件を確認します。
else：どの条件にも当てはまらなかった場合に実行されます。

👉 条件式は true / false（真偽値）を返す必要があります。
👉 上から順に評価され、最初にtrueになったところで処理が止まります。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
② 練習問題1
あなたのPHPファイル（step13_if.php）に以下を実装してください。
変数 $age に年齢を代入して、
20歳以上なら「成人です」
13歳以上なら「ティーンです」
それ以外は「子供です」
と表示するプログラムを書いてください。

ここまでの問題に挑戦してみてください。
できたらコードを貼っていただければ、私が正誤をチェックし、さらに次の問題へ進みます。

👉 まずは「年齢判定」の問題からどうぞ。

<?php

$age = 20;

if ($age >= 20){
    echo "成人です。" . "\n";
} elseif ($age >= 13){
    echo "ティーンです。" . "\n";
} else {
    echo "子供です。" . "\n";
}

?>

✅ とても良いです！完璧に書けています 👏

ポイントを確認します：
if ($age >= 20) → 20歳以上を判定できています。
elseif ($age >= 13) → 「20歳未満かつ13歳以上」がここで拾われます。
else → 13歳未満の子供をカバー。
echo の後に "\n" を付けて改行しているのも良い習慣です。
実務でもこういう条件分岐は頻出します。とても良い仕上がりです。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

次の問題（練習問題2）
変数 $score に点数を代入して、以下の判定をするプログラムを作ってください。
80点以上なら「優秀」
60点以上なら「合格」
60点未満なら「不合格」

👉 ファイル名は step13_score.php にしてください。
できたらコードを貼ってください。

<?php

$score = 65;

if ($score >= 80){
    echo "優秀です。" . "\n";
} elseif ($score >= 60){
    echo "合格です。" . "\n";
} else ($score < 60){
    echo "不合格です。" . "\n";
}

?>

いいですね！ただ、1点だけ惜しい部分があります 👇

❌ 間違い箇所
else ($score < 60){
    echo "不合格です。" . "\n";
}
👉 else に条件式は書けません。
条件式を書くのは if または elseif のときだけです。
else は「それ以外すべて」を意味するので、条件は不要です。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
練習問題2修正版：


$score = 65;

if ($score >= 80){
    echo "優秀です。" . "\n";
} elseif ($score >= 60){
    echo "合格です。" . "\n";
} elseif ($score < 60){
    echo "不合格です。" . "\n";
}

?>

👍 ほぼ正解です！
動作としては問題なく「合格」と表示されます。
ただし、コードをよりシンプルにできます。

解説
あなたのコード：

} elseif ($score < 60){
    echo "不合格です。" . "\n";
}

これは動作的には間違っていません。
でも実は不要な条件式です。なぜなら：
すでに if ($score >= 80) と elseif ($score >= 60) で「80以上」と「60以上」をカバー済み。
残っているのは 必然的に 60未満 の場合だけ。
そのため else で十分なんです。

ベストプラクティス版
<?php

$score = 65;

if ($score >= 80){
    echo "優秀です。" . "\n";
} elseif ($score >= 60){
    echo "合格です。" . "\n";
} else {
    echo "不合格です。" . "\n";
}

?>
✅ 実務では「条件を重複して書かずにシンプルにする」ことが好まれます。
これで Step13 の基本はしっかり理解できています！

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

次の挑戦（練習問題3：応用）

変数 $temperature に気温を代入して、以下の判定をしてください：
30度以上なら「猛暑日」
25度以上なら「夏日」
15度以上なら「過ごしやすい」
15度未満なら「寒い」

👉 ファイル名は step13_temperature.php にしてください。

書けたらコードを貼ってください！

<?php

$temperature = 50;

if ($temperature >= 30){
    echo "猛暑日です。" . "\n";
} elseif ($temperature >= 25){
    echo "夏日です。" . "\n";
} elseif ($temperature >= 15){
    echo "過ごしやすい日です。" . "\n";
} else {
    echo "寒い日です。" . "\n";
}

?>

💯 完璧です！
$temperature = 50; → 最初の条件 if ($temperature >= 30) が true になるので、「猛暑日です。」が表示されます。
条件の順番も適切（大きい方から判定）なので、正しく動作します。
else で残り（15度未満）をまとめているのもGOOD。
実務でよくある「しきい値による条件分岐」の基本を押さえられています 👏

✅ まとめ（Step13）
if / elseif / else は上から順に評価される。
最初に true になった部分で処理が止まる。
else に条件は不要（「それ以外すべて」をカバー）。
条件は「大きい値から順に」書くと漏れがなく読みやすい。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

🎯 最終テスト（Step13）
最後に集大成の問題です。
変数 $score に点数を代入して、以下の判定をしてください：
90点以上 → 「S評価」
80点以上 → 「A評価」
70点以上 → 「B評価」
60点以上 → 「C評価」
60点未満 → 「不合格」

👉 ファイル名は step13_final.php にしてください。

これができたら Step13 合格です！
書けたらコードを貼ってください。

<?php

$score = 160;

if ($score >= 90){
    echo "S評価" . "\n";
}elseif ($score >= 80){
    echo "A評価" . "\n";
}elseif ($score >= 70){
    echo "B評価" . "\n";
}elseif ($score >= 60){
    echo "C評価" . "\n";
}else{
    echo "不合格" . "\n";
}

?>

👏 素晴らしいです！完璧に書けています。

✅ 評価ポイント
条件分岐の順番：大きい方から順に評価しているので正しく判定される。
else で「60未満」をまとめていて冗長さがない。
改行 "\n" も適切に使っている。

🔍 動作確認例
$score = 160; → 最初の条件 if ($score >= 90) が true → 「S評価」
$score = 85; → elseif ($score >= 80) が true → 「A評価」
$score = 75; → elseif ($score >= 70) が true → 「B評価」
$score = 62; → elseif ($score >= 60) が true → 「C評価」
$score = 40; → どれも false → 「不合格」

すべて正しく動作します 👍

🎓 Step13 合格です！

これで if / elseif / else を完全に理解しました。
実務でも「条件分岐での判定ロジック」は頻出なので、今の理解は強い武器になります。